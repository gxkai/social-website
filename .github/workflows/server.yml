# This is a basic workflow to help you get started with Actions

name: Server

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: inject env
        run: npm run inject:env DATABASE_URL=${{ secrets.DATABASE_URL }} REDIS_URL=${{ secrets.REDIS_URL }} QQ_EMAIL_USER=${{secrets.QQ_EMAIL_USER}} QQ_EMAIL_PASS=${{secrets.QQ_EMAIL_PASS}} BASE_URL=${{secrets.BASE_URL}}

      - name: Deploy to Server # 第二步，rsync推文件
        uses: AEnterprise/rsync-deploy@v1.0 # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude='*.pyc' # rsync参数，排除.pyc文件
          SERVER_PORT: ${{ secrets.SSH_PORT }} # SSH端口
          FOLDER: . # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }} # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.SSH_USER }} # 引用配置，服务器登录名
          SERVER_DESTINATION: /www/project/personal-website/ # 部署到目标文件夹

      - name: Restart server # 第三步，重启服务
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }} # 下面三个配置与上一步类似
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }} # SSH端口
          key: ${{ secrets.DEPLOY_KEY }}
          #https://github.com/appleboy/ssh-action/issues/21
#          script: pnpm -v
          # 重启的脚本，根据自身情况做相应改动，一般要做的是migrate数据库以及重启服务器
          script: |
            cd /www/project/personal-website
            pnpm install
            pnpm build
            pnpm kill
            pnpm run deploy
            nginx -s reload

